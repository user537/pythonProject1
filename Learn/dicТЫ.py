# dict(словарь) - литералом является {}

# a = {"password":1234}
# print(a)

a = dict(password=1234)
print(a)

# key - неизменяемый тип данных, от которого можно взять hash(?)
# hash - строка минимального размера, позволяющая однозначно идентифицировать экземпляр обьекта по значению
# хэш сумма. Хэш коллизия, когда для двух обьектов одинаковая хэш сумма(пример с пикселями)

person = {"name": "Васян"}
person["age"] = 42
person.update({"age": 60})
print(person)
del person["age"]
print(person)

pupil = {"name": "Чувак", "age": 16, "grade": 6}
print(list(pupil.items()))
print(list(pupil.keys()))
print(list(pupil.values()))
print(pupil.pop("name"))  # словари индексируются по ключу
print(pupil)

country_fruit = {"Vietnam": ["Mango", "Dragon Fruit", "Passion Fruit"], "Russia": ["Brukva", "Kortoshka", "Luk"]}
print(country_fruit["Russia"][-1])  # по ключю получаем список, потом из него последнее значение

books = dict(Dostoevski="Преступление и наказание", key="value", Kamu="Посторонний")
print({v:k for k,v in books.items()})

# ДЗ - разработать БД, которая будет находиться в памяти.
# Таблицы: Учитель {имя, предмет, рейтинг, todo список ид классов}
# Класс {ид, кол-во учеников, буква(имя класса), "список ид предметов"}
# Предмет {ид, имя, оценки(словарь в котором ключ - ид ученика, значение - список его оценок)}
# Ученик {ид, имя, возраст, описание}

#Приложение имеет возможность добавить новый эземпляр. Можно найти ученика по имени, можно найти оценки ученика по предмету, зная его имя,
# можно посчитать средний балл по предмету, добавить оценку, удалить оценку

# Для начала понять, где использовать списки, а где дикты
# Собсна создать типо бд
# Добавить импуты, в которых будут выше описанные возможности

# Ознакомление с условиями и циклами
# todo добавить свзяь между таблицами, добавить циклы, добавить парсер, изменить count, добавить проект на гит
# todo факториал числа, циклы в бд, code wars 8 level, добавить менюшку